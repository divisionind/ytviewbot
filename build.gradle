/*
 * ytviewbot - just a YouTube view bot
 * Copyright (C) 2019 Anonymous
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    
    id 'application'
}

group 'org.anonymous'
version '2019.0.1'
mainClassName = "com.anonymous.ytvb.YTViewBot"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/net.sourceforge.htmlunit/htmlunit
    compile group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.35.0'

    // https://mvnrepository.com/artifact/info.picocli/picocli
    compile group: 'info.picocli', name: 'picocli', version: '3.8.2'

    // https://mvnrepository.com/artifact/org.jline/jline
    compile group: 'org.jline', name: 'jline', version: '3.11.0'

    // https://mvnrepository.com/artifact/com.googlecode.juniversalchardet/juniversalchardet
    compile group: 'com.googlecode.juniversalchardet', name: 'juniversalchardet', version: '1.0.3'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task makeJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Main-Class': mainClassName
    }
    version = ''
    baseName = project.name
    from { configurations.compile.filter{ it.getName().endsWith(".jar") }.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task pack(dependsOn: ['clean', 'makeJar'])
makeJar.mustRunAfter clean

task linux(dependsOn: pack, type: Exec) {
    if (OperatingSystem.current().isLinux()) {
        workingDir 'build/libs'
        commandLine "sh", "../../linux.sh"
    } else println 'Build platform not linux. Cannot run some tasks.'
}